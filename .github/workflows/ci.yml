name: Deploy main
on:
    push:
        branches:
            - main

jobs:
    # Runs `yarn testcheck` on the code, which checks for TypeScript errors and runs Jest tests.
    build:
        runs-on: ubuntu-latest
        env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        steps:
            - name: Clone repository
              uses: actions/checkout@v4

            # Use Node version specified in .nvmrc
            # https://github.com/actions/setup-node/issues/32#issuecomment-525791142
            - name: Read .nvmrc
              id: nvm
              run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"

            - name: Use Node.js (.nvmrc)
              uses: actions/setup-node@v4
              with:
                  node-version: "${{ steps.nvm.outputs.NVMRC }}"

            # Restore yarn cache, makes it way faster
            # https://github.com/actions/cache/blob/master/examples.md#node---yarn
            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn cache dir)"

            - uses: actions/cache@v2
              id: yarn-cache
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-${{ steps.nvm.outputs.NVMRC }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - uses: actions/cache@v2
              id: node-modules-cache
              with:
                  path: node_modules
                  key: ${{ runner.os }}-${{ steps.nvm.outputs.NVMRC }}-node-modules-${{ hashFiles('**/yarn.lock') }}

            - name: Install dependencies
              run: yarn

            - name: Run Export
              run: yarn export

            - name: Upload js files to S3
              run: |
                  aws s3 cp ./out s3://learn.alphacast.io/ --recursive

            - name: Invalidates cloudfront cache
              run: |
                  aws cloudfront create-invalidation --distribution-id E16SJSH1Y5KRVL --paths "/*"
